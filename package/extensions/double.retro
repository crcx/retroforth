~~~
:double:var (:nns-)
  d:create swap , , ;

:double:fetch (:a-nn)
  fetch-next swap fetch ;

:double:store (:nna-)
  &swap dip store-next store ;

:double:const (:nns-)
  double:var &double:fetch does ;

:double:swap (:nnmm-mmnn)
  rot push rot pop ;

:double:dip (:mnq-mn) rot rot push push call pop pop ;
:double:sip (:mnq-mn) &dup-pair dip double:dip ;

'Create_a_constant_returning_the_specified_double_cell_value. 'double:const d:set-description
'Temporarily_remove_m_and_n_from_the_stack,_execute_the_quotation,_and_then_restore_m_and_n_to_the_stack. 'double:dip d:set-description
'Fetch_the_double_cell_values_stored_in_the_double_cell_variable_at_a. 'double:fetch d:set-description
'Run_quote._After_execution_completes,_put_a_copy_of_m_and_n_back_on_top_of_the_stack. 'double:sip d:set-description
'Store_the_double_cell_values_on_the_stack_in_the_double_cell_variable_at_a. 'double:store d:set-description                                                                    'Swap_double_cell_value_on_stack. 'double:swap d:set-description
'Create_a_variable_for_holding_the_specified_double_cell_value. 'double:var d:set-description
~~~
